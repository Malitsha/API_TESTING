<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="16" passed="15" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2023-09-13T16:49:54Z" name="Default suite" finished-at="2023-09-13T16:50:08Z" duration-ms="14488">
    <groups>
    </groups>
    <test started-at="2023-09-13T16:49:54Z" name="Default test" finished-at="2023-09-13T16:50:08Z" duration-ms="14488">
      <class name="Test_Request">
        <test-method signature="Get_Delayed()[pri:0, instance:Test_Request@768fc0f2]" started-at="2023-09-13T16:49:54Z" name="Get_Delayed" finished-at="2023-09-13T16:49:59Z" duration-ms="5670" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Get_Delayed -->
        <test-method signature="Patch_Update()[pri:0, instance:Test_Request@768fc0f2]" started-at="2023-09-13T16:49:59Z" name="Patch_Update" finished-at="2023-09-13T16:50:00Z" duration-ms="796" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Patch_Update -->
        <test-method signature="Post_Login_Succesful()[pri:0, instance:Test_Request@768fc0f2]" started-at="2023-09-13T16:50:00Z" name="Post_Login_Succesful" finished-at="2023-09-13T16:50:01Z" duration-ms="786" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Post_Login_Succesful -->
        <test-method signature="Post_Login_UnSuccesful()[pri:0, instance:Test_Request@768fc0f2]" started-at="2023-09-13T16:50:01Z" name="Post_Login_UnSuccesful" finished-at="2023-09-13T16:50:02Z" duration-ms="664" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Post_Login_UnSuccesful -->
        <test-method signature="Post_Register_Successful()[pri:0, instance:Test_Request@768fc0f2]" started-at="2023-09-13T16:50:02Z" name="Post_Register_Successful" finished-at="2023-09-13T16:50:02Z" duration-ms="733" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[1 expectation failed.
Expected status code <200> but was <400>.
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 1 expectation failed.
Expected status code <200> but was <400>.

at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:73)
at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrapNoCoerce.callConstructor(ConstructorSite.java:108)
at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallConstructor(CallSiteArray.java:57)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:263)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:512)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:696)
at io.restassured.internal.ResponseSpecificationImpl.this$2$validateResponseIfRequired(ResponseSpecificationImpl.groovy)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.codehaus.groovy.runtime.callsite.PlainObjectMetaMethodSite.doInvoke(PlainObjectMetaMethodSite.java:43)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:198)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:62)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:185)
at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:135)
at io.restassured.specification.ResponseSpecification$statusCode$0.callCurrent(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:143)
at io.restassured.internal.ValidatableResponseOptionsImpl.statusCode(ValidatableResponseOptionsImpl.java:89)
at Test_Request.Post_Register_Successful(Test_Request.java:140)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Post_Register_Successful -->
        <test-method signature="Post_Register_Unsuccessful()[pri:0, instance:Test_Request@768fc0f2]" started-at="2023-09-13T16:50:03Z" name="Post_Register_Unsuccessful" finished-at="2023-09-13T16:50:03Z" duration-ms="766" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Post_Register_Unsuccessful -->
        <test-method signature="Put_Update()[pri:0, instance:Test_Request@768fc0f2]" started-at="2023-09-13T16:50:03Z" name="Put_Update" finished-at="2023-09-13T16:50:04Z" duration-ms="637" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Put_Update -->
        <test-method signature="testDelete()[pri:0, instance:Test_Request@768fc0f2]" started-at="2023-09-13T16:50:04Z" name="testDelete" finished-at="2023-09-13T16:50:05Z" duration-ms="597" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDelete -->
        <test-method signature="testListUsers()[pri:0, instance:Test_Request@768fc0f2]" started-at="2023-09-13T16:50:05Z" name="testListUsers" finished-at="2023-09-13T16:50:05Z" duration-ms="368" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testListUsers -->
        <test-method signature="testList_Resource()[pri:0, instance:Test_Request@768fc0f2]" started-at="2023-09-13T16:50:05Z" name="testList_Resource" finished-at="2023-09-13T16:50:05Z" duration-ms="380" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testList_Resource -->
        <test-method signature="testPost_Create()[pri:0, instance:Test_Request@768fc0f2]" started-at="2023-09-13T16:50:05Z" name="testPost_Create" finished-at="2023-09-13T16:50:06Z" duration-ms="661" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPost_Create -->
        <test-method signature="testSingleUser()[pri:0, instance:Test_Request@768fc0f2]" started-at="2023-09-13T16:50:06Z" name="testSingleUser" finished-at="2023-09-13T16:50:06Z" duration-ms="307" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSingleUser -->
        <test-method signature="testSingleUserNotFound()[pri:0, instance:Test_Request@768fc0f2]" started-at="2023-09-13T16:50:06Z" name="testSingleUserNotFound" finished-at="2023-09-13T16:50:07Z" duration-ms="625" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSingleUserNotFound -->
        <test-method signature="testSingle_Resource()[pri:0, instance:Test_Request@768fc0f2]" started-at="2023-09-13T16:50:07Z" name="testSingle_Resource" finished-at="2023-09-13T16:50:07Z" duration-ms="342" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSingle_Resource -->
        <test-method signature="testSingle_Resource_NotFound()[pri:0, instance:Test_Request@768fc0f2]" started-at="2023-09-13T16:50:07Z" name="testSingle_Resource_NotFound" finished-at="2023-09-13T16:50:08Z" duration-ms="649" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSingle_Resource_NotFound -->
        <test-method signature="test_01()[pri:0, instance:Test_Request@768fc0f2]" started-at="2023-09-13T16:50:08Z" name="test_01" finished-at="2023-09-13T16:50:08Z" duration-ms="400" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_01 -->
      </class> <!-- Test_Request -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
